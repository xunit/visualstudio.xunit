<Project DefaultTargets="Test" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
  <UsingTask
      AssemblyFile="packages\xunit.buildtasks\tools\CodePlex.MSBuildTasks.dll"
      TaskName="CodePlex.MSBuildTasks.RegexReplace"/>
  <UsingTask
      AssemblyFile="packages\xunit.buildtasks\tools\CodePlex.MSBuildTasks.dll"
      TaskName="CodePlex.MSBuildTasks.Zip"/>

  <!-- Settings -->

  <PropertyGroup>
    <Configuration Condition="'$(Configuration)' == ''">Release</Configuration>
    <TrackFileAccess>false</TrackFileAccess>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(MSBuildProjectDirectory)</SolutionDir>
    <NuGetExePath Condition=" '$(NuGetExePath)' == '' ">$(SolutionDir)\.nuget\nuget.exe</NuGetExePath>
  </PropertyGroup>
  <ItemGroup>
    <NuspecFiles Include="**\*.nuspec" />
  </ItemGroup>
  <ItemGroup Condition=" '$(PackageSources)' == '' ">
    <PackageSource Include="https://nuget.org/api/v2/" />
    <PackageSource Include="http://www.myget.org/F/b4ff5f68eccf4f6bbfed74f055f88d8f/" />
    <PackageSource Include="http://www.myget.org/F/xunit/" />
  </ItemGroup>

  <!-- Build server targets -->

  <Target Name="CI" DependsOnTargets="Clean;PackageRestore;SetVersionNumber;Build;GitLink;Packages;ZipArtifacts" />
  <Target Name="TeamCity" DependsOnTargets="CI;PushMyGet" />
  <Target Name="Release" DependsOnTargets="Clean;PackageRestore;Build;Packages;ZipArtifacts" />

  <!-- Individiual targets -->

  <Target Name="Clean">
    <ItemGroup>
      <CleanFileList Include="*.html;*.xml;*.nupkg;.nuget\NuGet.exe"/>
    </ItemGroup>
    <MSBuild
        Projects="visualstudio.xunit.sln"
        Targets="Clean"
        Properties="Configuration=$(Configuration);TrackFileAccess=$(TrackFileAccess)"/>
    <Delete Files="@(CleanFileList)"/>
  </Target>

  <Target Name="PackageRestore" DependsOnTargets="_DownloadNuGet">
    <Message Text="Restoring NuGet packages..." Importance="High" />
    <Exec Command="&quot;$(NuGetExePath)&quot; install xunit.buildtasks -Source @(PackageSource) -SolutionDir &quot;$(SolutionDir)&quot; -Verbosity quiet -ExcludeVersion" Condition="!Exists('$(SolutionDir)\packages\xunit.buildtasks\')" />
    <Exec Command="&quot;$(NuGetExePath)&quot; install gitlink -SolutionDir &quot;$(SolutionDir)&quot; -Verbosity quiet -ExcludeVersion" Condition="!Exists('$(SolutionDir)\packages\gitlink\')" />
    <Exec Command="&quot;$(NuGetExePath)&quot; restore &quot;$(SolutionDir)\visualstudio.xunit.sln&quot; -NonInteractive -Source @(PackageSource) -Verbosity quiet" />
  </Target>

  <Target Name="Build" DependsOnTargets="PackageRestore;_BuildProject" />

  <Target Name="_BuildProject">
    <MSBuild
        Projects="visualstudio.xunit.sln"
        Targets="Build"
        Properties="Configuration=$(Configuration);TrackFileAccess=$(TrackFileAccess)"/>
  </Target>

  <Target Name="SetVersionNumber">
    <RegexReplace
        Pattern='AssemblyVersion\("99\.99\.99\.0"\)'
        Replacement='AssemblyVersion("$(BuildAssemblyVersion)")'
        Files='common\GlobalAssemblyInfo.cs'
        Condition=" '$(BuildAssemblyVersion)' != '' "/>
    <RegexReplace
        Pattern='99\.99\.99-dev'
        Replacement='$(BuildSemanticVersion)'
        Files='@(NuspecFiles)'
        Condition=" '$(BuildSemanticVersion)' != '' "/>
  </Target>

  <Target Name='GitLink'>
    <Warning Condition=" '$(CommitHash)' == '' "
        Text="Skipping GitLink because CommitHash was not specified." />
    <Exec Condition=" '$(CommitHash)' != '' "
        Command='packages\gitlink\lib\net45\GitLink.exe $(MSBuildThisFileDirectory) -f visualstudio.xunit.sln -u https://github.com/xunit/visualstudio.xunit -s $(CommitHash)' IgnoreExitCode='true' />
  </Target>

  <Target Name='Packages' DependsOnTargets="_DownloadNuGet">
    <Exec Command='.nuget\NuGet.exe pack %(NuspecFiles.Identity) -NoPackageAnalysis -NonInteractive -Verbosity quiet' />
  </Target>

  <Target Name='ZipArtifacts'>
    <ItemGroup>
      <Binaries Include="*.nupkg" />
    </ItemGroup>

    <Delete Files="binaries.zip" />
    <Zip Files="@(Binaries)" ZipFileName="binaries.zip" StripPath="true" />
  </Target>

  <Target Name="PushMyGet" Condition=" '$(GitBranch)' == 'master' Or '$(GitBranch)' == 'refs/heads/master' ">
    <ItemGroup>
      <NupkgFiles Include="*.nupkg" />
    </ItemGroup>
    <Exec Command=".nuget\NuGet.exe push %(NupkgFiles.Identity) -NonInteractive -Source https://www.myget.org/F/xunit/api/v2/package" />
  </Target>

  <Target Name="PushNuGet">
    <ItemGroup>
      <NupkgFiles Include="*.nupkg" />
    </ItemGroup>
    <Exec Command=".nuget\NuGet.exe push %(NupkgFiles.Identity) -NonInteractive" />
  </Target>

  <Target Name="_DownloadNuGet">
    <MakeDir Directories="$(SolutionDir)\.nuget" />
    <DownloadNuGet OutputFilename="$(NuGetExePath)" Condition="!Exists('$(NuGetExePath)')" />
  </Target>

  <UsingTask TaskName="DownloadNuGet" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <OutputFilename ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Net" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          try {
              OutputFilename = Path.GetFullPath(OutputFilename);

              Log.LogMessage("Downloading latest version of NuGet.exe...");
              WebClient webClient = new WebClient();
              webClient.DownloadFile("https://www.nuget.org/nuget.exe", OutputFilename);

              return true;
          }
          catch (Exception ex) {
              Log.LogErrorFromException(ex);
              return false;
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>