<Project Sdk="Microsoft.Net.SDK">

  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <AssemblyName>xunit.runner.visualstudio.testadapter</AssemblyName>
    <AssemblyTitle>xUnit.net Runner for Visual Studio ($(TargetFramework))</AssemblyTitle>
    <CopyLocalLockFileAssemblies Condition=" '$(TargetFramework)' == 'net6.0' ">true</CopyLocalLockFileAssemblies>
    <NoWarn>$(NoWarn);CS0436</NoWarn>
    <Nullable>enable</Nullable>
    <PackageId>$(MSBuildProjectName)</PackageId>
    <RootNamespace>Xunit.Runner.VisualStudio</RootNamespace>
    <TargetFrameworks>net462;net6.0</TargetFrameworks>
    <WarningsAsErrors>true</WarningsAsErrors>
  </PropertyGroup>

  <ItemGroup>
    <PackageDownload Include="Microsoft.NETCore.App.Ref" Version="[$(MicrosoftNetCoreAppRefVersion)]" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.TestPlatform.ObjectModel" Version="$(MicrosoftTestPlatformObjectModelVersion)" PrivateAssets="All" />
    <PackageReference Include="Microsoft.Testing.Extensions.VSTestBridge" Version="$(MicrosoftTestingPlatformVersion)" />
    <PackageReference Include="TunnelVisionLabs.ReferenceAssemblyAnnotator" Version="$(TunnelVisionLabsReferenceAssemblyAnnotatorVersion)" PrivateAssets="All" />
    <PackageReference Include="xunit.analyzers" Version="$(XunitAnalyzersVersion)" PrivateAssets="All" />
    <PackageReference Include="xunit.runner.reporters" Version="$(XunitVersion)" />
  </ItemGroup>

  <!-- Support deterministic builds (via https://github.com/clairernovotny/DeterministicBuilds) -->
  <PropertyGroup>
    <ContinuousIntegrationBuild Condition=" '$(GITHUB_ACTIONS)' == 'true' ">true</ContinuousIntegrationBuild>
    <TargetFrameworkMonikerAssemblyAttributesPath Condition="'$(TargetFrameworkMoniker)' != ''">$([System.IO.Path]::Combine('$(IntermediateOutputPath)','$(TargetFrameworkMoniker).AssemblyAttributes$(DefaultLanguageSourceExtension)'))</TargetFrameworkMonikerAssemblyAttributesPath>
  </PropertyGroup>
  <ItemGroup>
    <EmbeddedFiles Include="$(GeneratedAssemblyInfoFile)" />
  </ItemGroup>

  <!-- Supplement Nerdbank.GitVersioning version calculations -->
  <Target Name="UpdateAssemblyVersionInfo" BeforeTargets="GenerateAssemblyNBGVVersionInfo" DependsOnTargets="GetBuildVersion">
    <PropertyGroup>
      <!-- Local builds should have a '-dev' suffix on the build number -->
      <PrereleaseSuffix Condition=" '$(GITHUB_ACTIONS)' != 'true' ">-dev</PrereleaseSuffix>
      <!-- AssemblyVersion and AssemblyFileVersion should be x.y.z.0 -->
      <AssemblyVersion>$(BuildVersionSimple)</AssemblyVersion>
      <AssemblyFileVersion>$(BuildVersionSimple)</AssemblyFileVersion>
      <!-- Always put the Git hash in the informational version, even for non-pre-release versions -->
      <AssemblyInformationalVersion>$(BuildVersionSimple)$(PrereleaseVersion)$(PrereleaseSuffix)+$(GitCommitIdShort)</AssemblyInformationalVersion>
    </PropertyGroup>
  </Target>

  <Target Name="UpdateNuSpecProperties" BeforeTargets="GenerateNuspec" DependsOnTargets="GetBuildVersion">
    <PropertyGroup>
      <SignedPath />
      <SignedPath Condition=" '$(SIGN_APP_SECRET)' != '' ">signed\</SignedPath>
      <!-- Local builds should have a '-dev' suffix on the build number -->
      <PrereleaseSuffix Condition=" '$(GITHUB_ACTIONS)' != 'true' ">-dev</PrereleaseSuffix>
      <!-- Never put the Git hash in the package version -->
      <PackageVersion>$(BuildVersionSimple)$(PrereleaseVersion)$(PrereleaseSuffix)</PackageVersion>
      <!-- Pass through values we don't know ahead of time for any hand-crafted .nuspec files -->
      <NuspecProperties>
        Configuration=$(Configuration);
        GitCommitId=$(GitCommitId);
        MicrosoftTestPlatformObjectModelVersion=$(MicrosoftTestPlatformObjectModelVersion);
        MicrosoftTestingPlatformVersion=$(MicrosoftTestingPlatformVersion);
        PackageVersion=$(PackageVersion);
        SignedPath=$(SignedPath);
      </NuspecProperties>
    </PropertyGroup>
  </Target>

</Project>
